#include <iostream>
#include <vector>

using namespace std;

int func(int base, int number)
{
	for (int i = 1; i < number; i++)

		if (pow(base, i) == number)
			return i;
	return -1;

}
int maxvec(vector<int> &vec)
{
	int max = vec[0];

	for (int i = 0; i < vec.size(); i++)
		if (vec[i] > max)
			max = vec[i];

	return max;
}

int main()
{
	
	int N;
	cin >> N;
	vector<int> divider;
	vector<int> prime;
	vector<int> K;
	int countprime = 0;
	for (int i = 2; i < N; i++)
		if (N % i == 0)
			divider.push_back(i);

	
	for (int i = 1; i < N; i++) {
		for (int j = i; j != 0; j--) 
			if (i % j == 0)
				countprime++;
		if (countprime <= 2) 
			prime.push_back(i);
			countprime = 0;
		
	}

	for (int j = 0; j < divider.size(); j++) {
		for (int i = 1; i < divider.size(); i++)
			if (func(prime[j], divider[i]) != -1) 
				K.push_back(func(prime[j], divider[i]));
			
	}

	
	cout << maxvec(K) << endl;

	system("pause");
	return 0;
}
